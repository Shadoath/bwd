<div cpass='small-12 columns'>
<div id="map"></div>
  <script>
    var map;
    <% if address.place_id.present? %>
      function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 0, lng: 0},
          zoom: 16
        });

        var infowindow = new google.maps.InfoWindow();
        var service = new google.maps.places.PlacesService(map);

        service.getDetails({
          placeId: '<%= address.place_id %>'
        }, function(place, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location
            });
            map.center = place.geopmetry.location;
            google.maps.event.addListener(marker, 'click', function() {
              infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                'Place ID: ' + place.place_id + '<br>' +
                place.formatted_address + '</div>');
              infowindow.open(map, this);
            });
          }
        });
      }
  <% elsif address.latitude && address.longitude %>
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: <%= address.latitude %>, lng: <%= address.longitude %>},
          zoom: 8
        });
      }
  <% elsif @restaurant %>
    function initMap() {
      var geocoder = new google.maps.Geocoder();

      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 0, lng: 0},
        zoom: 8
      });

      geocoder.geocode({'address': "<%= "#{@restaurant.name.gsub(' ', '+')},#{address.city}+#{address.state}" %>"}, function(results, status) {
        if (status === 'OK') {
          map.setCenter(results[0].geometry.location);
        } else {
          console.log(results);
          alert('Geocode was not successful for the following reason: ' + status);
        }
      });
    }
  <% end %>
</script>
</div>
